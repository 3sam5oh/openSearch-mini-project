{"ast":null,"code":"/*\n * Copyright OpenSearch Contributors\n * SPDX-License-Identifier: Apache-2.0\n *\n * The OpenSearch Contributors require contributions made to\n * this file be licensed under the Apache-2.0 license or a\n * compatible open source license.\n *\n */\n\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n'use strict';\n\n/* eslint camelcase: 0 */\n/* eslint no-unused-vars: 0 */\nconst {\n  handleError,\n  snakeCaseKeys,\n  normalizeArguments,\n  kConfigurationError\n} = require('../utils');\nconst acceptedQuerystring = ['requests_per_second', 'pretty', 'human', 'error_trace', 'source', 'filter_path'];\nconst snakeCase = {\n  requestsPerSecond: 'requests_per_second',\n  errorTrace: 'error_trace',\n  filterPath: 'filter_path'\n};\n\n/**\n * Changes the number of requests per second for a particular Reindex operation.\n *\n * @memberOf API-Document\n *\n * @param {Object} params\n * @param {string} params.task_id - The task id to rethrottle\n * @param {number} params.requests_per_second - The throttle to set on this request in floating sub-requests per second. -1 means set no throttle.\n *\n * @param {Object} options - Options for {@link Transport#request}\n * @param {function} callback - Callback that handles errors and response\n *\n * @returns {{abort: function(), then: function(), catch: function()}|Promise<never>|*}\n */\nfunction reindexRethrottleApi(params, options, callback) {\n  [params, options, callback] = normalizeArguments(params, options, callback);\n\n  // check required parameters\n  if (params.task_id == null && params.taskId == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: task_id or taskId');\n    return handleError(err, callback);\n  }\n  if (params.requests_per_second == null && params.requestsPerSecond == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: requests_per_second or requestsPerSecond');\n    return handleError(err, callback);\n  }\n  let {\n    method,\n    body,\n    taskId,\n    task_id,\n    ...querystring\n  } = params;\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring);\n  let path = '';\n  if (method == null) method = 'POST';\n  path = '/' + '_reindex' + '/' + encodeURIComponent(task_id || taskId) + '/' + '_rethrottle';\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  };\n  return this.transport.request(request, options, callback);\n}\nmodule.exports = reindexRethrottleApi;","map":{"version":3,"names":["handleError","snakeCaseKeys","normalizeArguments","kConfigurationError","require","acceptedQuerystring","snakeCase","requestsPerSecond","errorTrace","filterPath","reindexRethrottleApi","params","options","callback","task_id","taskId","err","requests_per_second","method","body","querystring","path","encodeURIComponent","request","transport","module","exports"],"sources":["C:/search/vue-search/node_modules/@opensearch-project/opensearch/api/api/reindex_rethrottle.js"],"sourcesContent":["/*\n * Copyright OpenSearch Contributors\n * SPDX-License-Identifier: Apache-2.0\n *\n * The OpenSearch Contributors require contributions made to\n * this file be licensed under the Apache-2.0 license or a\n * compatible open source license.\n *\n */\n\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n'use strict';\n\n/* eslint camelcase: 0 */\n/* eslint no-unused-vars: 0 */\n\nconst { handleError, snakeCaseKeys, normalizeArguments, kConfigurationError } = require('../utils');\nconst acceptedQuerystring = [\n  'requests_per_second',\n  'pretty',\n  'human',\n  'error_trace',\n  'source',\n  'filter_path',\n];\nconst snakeCase = {\n  requestsPerSecond: 'requests_per_second',\n  errorTrace: 'error_trace',\n  filterPath: 'filter_path',\n};\n\n/**\n * Changes the number of requests per second for a particular Reindex operation.\n *\n * @memberOf API-Document\n *\n * @param {Object} params\n * @param {string} params.task_id - The task id to rethrottle\n * @param {number} params.requests_per_second - The throttle to set on this request in floating sub-requests per second. -1 means set no throttle.\n *\n * @param {Object} options - Options for {@link Transport#request}\n * @param {function} callback - Callback that handles errors and response\n *\n * @returns {{abort: function(), then: function(), catch: function()}|Promise<never>|*}\n */\nfunction reindexRethrottleApi(params, options, callback) {\n  [params, options, callback] = normalizeArguments(params, options, callback);\n\n  // check required parameters\n  if (params.task_id == null && params.taskId == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: task_id or taskId');\n    return handleError(err, callback);\n  }\n  if (params.requests_per_second == null && params.requestsPerSecond == null) {\n    const err = new this[kConfigurationError](\n      'Missing required parameter: requests_per_second or requestsPerSecond'\n    );\n    return handleError(err, callback);\n  }\n\n  let { method, body, taskId, task_id, ...querystring } = params;\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring);\n\n  let path = '';\n  if (method == null) method = 'POST';\n  path = '/' + '_reindex' + '/' + encodeURIComponent(task_id || taskId) + '/' + '_rethrottle';\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring,\n  };\n\n  return this.transport.request(request, options, callback);\n}\n\nmodule.exports = reindexRethrottleApi;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ;AACA;AAEA,MAAM;EAAEA,WAAW;EAAEC,aAAa;EAAEC,kBAAkB;EAAEC;AAAoB,CAAC,GAAGC,OAAO,CAAC,UAAU,CAAC;AACnG,MAAMC,mBAAmB,GAAG,CAC1B,qBAAqB,EACrB,QAAQ,EACR,OAAO,EACP,aAAa,EACb,QAAQ,EACR,aAAa,CACd;AACD,MAAMC,SAAS,GAAG;EAChBC,iBAAiB,EAAE,qBAAqB;EACxCC,UAAU,EAAE,aAAa;EACzBC,UAAU,EAAE;AACd,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,oBAAoBA,CAACC,MAAM,EAAEC,OAAO,EAAEC,QAAQ,EAAE;EACvD,CAACF,MAAM,EAAEC,OAAO,EAAEC,QAAQ,CAAC,GAAGX,kBAAkB,CAACS,MAAM,EAAEC,OAAO,EAAEC,QAAQ,CAAC;;EAE3E;EACA,IAAIF,MAAM,CAACG,OAAO,IAAI,IAAI,IAAIH,MAAM,CAACI,MAAM,IAAI,IAAI,EAAE;IACnD,MAAMC,GAAG,GAAG,IAAI,IAAI,CAACb,mBAAmB,CAAC,CAAC,+CAA+C,CAAC;IAC1F,OAAOH,WAAW,CAACgB,GAAG,EAAEH,QAAQ,CAAC;EACnC;EACA,IAAIF,MAAM,CAACM,mBAAmB,IAAI,IAAI,IAAIN,MAAM,CAACJ,iBAAiB,IAAI,IAAI,EAAE;IAC1E,MAAMS,GAAG,GAAG,IAAI,IAAI,CAACb,mBAAmB,CAAC,CACvC,sEACF,CAAC;IACD,OAAOH,WAAW,CAACgB,GAAG,EAAEH,QAAQ,CAAC;EACnC;EAEA,IAAI;IAAEK,MAAM;IAAEC,IAAI;IAAEJ,MAAM;IAAED,OAAO;IAAE,GAAGM;EAAY,CAAC,GAAGT,MAAM;EAC9DS,WAAW,GAAGnB,aAAa,CAACI,mBAAmB,EAAEC,SAAS,EAAEc,WAAW,CAAC;EAExE,IAAIC,IAAI,GAAG,EAAE;EACb,IAAIH,MAAM,IAAI,IAAI,EAAEA,MAAM,GAAG,MAAM;EACnCG,IAAI,GAAG,GAAG,GAAG,UAAU,GAAG,GAAG,GAAGC,kBAAkB,CAACR,OAAO,IAAIC,MAAM,CAAC,GAAG,GAAG,GAAG,aAAa;;EAE3F;EACA,MAAMQ,OAAO,GAAG;IACdL,MAAM;IACNG,IAAI;IACJF,IAAI,EAAEA,IAAI,IAAI,EAAE;IAChBC;EACF,CAAC;EAED,OAAO,IAAI,CAACI,SAAS,CAACD,OAAO,CAACA,OAAO,EAAEX,OAAO,EAAEC,QAAQ,CAAC;AAC3D;AAEAY,MAAM,CAACC,OAAO,GAAGhB,oBAAoB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}