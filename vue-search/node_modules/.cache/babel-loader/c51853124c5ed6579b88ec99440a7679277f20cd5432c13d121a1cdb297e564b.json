{"ast":null,"code":"import { createRouter, createWebHistory } from 'vue-router';\nimport SearchMain from '@/views/SearchMain.vue';\nconst routes = [{\n  path: '/',\n  name: '/',\n  component: SearchMain\n}];\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n});\nconst express = require('express');\nconst cors = require('cors');\nconst app = express();\n\n// CORS 설정\napp.use(cors({\n  origin: 'http://localhost:8081' // Vue.js 앱이 실행 중인 도메인\n}));\n\n// 정적 파일 제공 (필요한 경우 추가)\napp.use(express.static('public'));\n\n// API 경로 설정\napp.get('/api/aws/:query', (req, res) => {\n  const query = req.params.query;\n  // 여기에 검색 로직을 추가하세요.\n  res.json([{\n    id: 1,\n    title: `${query} Result 1`\n  }, {\n    id: 2,\n    title: `${query} Result 2`\n  }]);\n});\n\n// 서버 시작\nconst PORT = 8080;\napp.listen(PORT, () => {\n  console.log(`Server is running on port ${PORT}`);\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","SearchMain","routes","path","name","component","router","history","process","env","BASE_URL","express","require","cors","app","use","origin","static","get","req","res","query","params","json","id","title","PORT","listen","console","log"],"sources":["C:/search/vue-search/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router'\nimport SearchMain from '@/views/SearchMain.vue'\n\nconst routes = [\n  {\n    path: '/',\n    name: '/',\n    component: SearchMain\n  },\n]\n\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n})\n\n\nconst express = require('express');\nconst cors = require('cors');\nconst app = express();\n\n// CORS 설정\napp.use(cors({\n  origin: 'http://localhost:8081' // Vue.js 앱이 실행 중인 도메인\n}));\n\n// 정적 파일 제공 (필요한 경우 추가)\napp.use(express.static('public'));\n\n// API 경로 설정\napp.get('/api/aws/:query', (req, res) => {\n  const query = req.params.query;\n  // 여기에 검색 로직을 추가하세요.\n  res.json([\n    { id: 1, title: `${query} Result 1` },\n    { id: 2, title: `${query} Result 2` }\n  ]);\n});\n\n// 서버 시작\nconst PORT = 8080;\napp.listen(PORT, () => {\n  console.log(`Server is running on port ${PORT}`);\n});\n\nexport default router\n"],"mappings":"AAAA,SAASA,YAAY,EAAEC,gBAAgB,QAAQ,YAAY;AAC3D,OAAOC,UAAU,MAAM,wBAAwB;AAE/C,MAAMC,MAAM,GAAG,CACb;EACEC,IAAI,EAAE,GAAG;EACTC,IAAI,EAAE,GAAG;EACTC,SAAS,EAAEJ;AACb,CAAC,CACF;AAED,MAAMK,MAAM,GAAGP,YAAY,CAAC;EAC1BQ,OAAO,EAAEP,gBAAgB,CAACQ,OAAO,CAACC,GAAG,CAACC,QAAQ,CAAC;EAC/CR;AACF,CAAC,CAAC;AAGF,MAAMS,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAClC,MAAMC,IAAI,GAAGD,OAAO,CAAC,MAAM,CAAC;AAC5B,MAAME,GAAG,GAAGH,OAAO,CAAC,CAAC;;AAErB;AACAG,GAAG,CAACC,GAAG,CAACF,IAAI,CAAC;EACXG,MAAM,EAAE,uBAAuB,CAAC;AAClC,CAAC,CAAC,CAAC;;AAEH;AACAF,GAAG,CAACC,GAAG,CAACJ,OAAO,CAACM,MAAM,CAAC,QAAQ,CAAC,CAAC;;AAEjC;AACAH,GAAG,CAACI,GAAG,CAAC,iBAAiB,EAAE,CAACC,GAAG,EAAEC,GAAG,KAAK;EACvC,MAAMC,KAAK,GAAGF,GAAG,CAACG,MAAM,CAACD,KAAK;EAC9B;EACAD,GAAG,CAACG,IAAI,CAAC,CACP;IAAEC,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE,GAAGJ,KAAK;EAAY,CAAC,EACrC;IAAEG,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE,GAAGJ,KAAK;EAAY,CAAC,CACtC,CAAC;AACJ,CAAC,CAAC;;AAEF;AACA,MAAMK,IAAI,GAAG,IAAI;AACjBZ,GAAG,CAACa,MAAM,CAACD,IAAI,EAAE,MAAM;EACrBE,OAAO,CAACC,GAAG,CAAC,6BAA6BH,IAAI,EAAE,CAAC;AAClD,CAAC,CAAC;AAEF,eAAepB,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}