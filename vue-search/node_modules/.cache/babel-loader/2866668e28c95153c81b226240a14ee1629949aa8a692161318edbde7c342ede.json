{"ast":null,"code":"/*\n * Copyright OpenSearch Contributors\n * SPDX-License-Identifier: Apache-2.0\n *\n * The OpenSearch Contributors require contributions made to\n * this file be licensed under the Apache-2.0 license or a\n * compatible open source license.\n *\n */\n\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n'use strict';\n\n/* eslint camelcase: 0 */\n/* eslint no-unused-vars: 0 */\nconst {\n  handleError,\n  snakeCaseKeys,\n  normalizeArguments,\n  kConfigurationError\n} = require('../utils');\nconst acceptedQuerystring = ['pretty', 'human', 'error_trace', 'source', 'filter_path'];\nconst snakeCase = {\n  errorTrace: 'error_trace',\n  filterPath: 'filter_path'\n};\nfunction ShutdownApi(transport, ConfigurationError) {\n  this.transport = transport;\n  this[kConfigurationError] = ConfigurationError;\n}\n\n// TODO: Remove. Added in ES 7.15\nShutdownApi.prototype.deleteNode = function shutdownDeleteNodeApi(params, options, callback) {\n  [params, options, callback] = normalizeArguments(params, options, callback);\n\n  // check required parameters\n  if (params.node_id == null && params.nodeId == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: node_id or nodeId');\n    return handleError(err, callback);\n  }\n  let {\n    method,\n    body,\n    nodeId,\n    node_id,\n    ...querystring\n  } = params;\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring);\n  let path = '';\n  if (method == null) method = 'DELETE';\n  path = '/' + '_nodes' + '/' + encodeURIComponent(node_id || nodeId) + '/' + 'shutdown';\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  };\n  return this.transport.request(request, options, callback);\n};\n\n// TODO: Remove. Added in ES 7.15\nShutdownApi.prototype.getNode = function shutdownGetNodeApi(params, options, callback) {\n  [params, options, callback] = normalizeArguments(params, options, callback);\n  let {\n    method,\n    body,\n    nodeId,\n    node_id,\n    ...querystring\n  } = params;\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring);\n  let path = '';\n  if ((node_id || nodeId) != null) {\n    if (method == null) method = 'GET';\n    path = '/' + '_nodes' + '/' + encodeURIComponent(node_id || nodeId) + '/' + 'shutdown';\n  } else {\n    if (method == null) method = 'GET';\n    path = '/' + '_nodes' + '/' + 'shutdown';\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  };\n  return this.transport.request(request, options, callback);\n};\n\n// TODO: Remove. Added in ES 7.15\nShutdownApi.prototype.putNode = function shutdownPutNodeApi(params, options, callback) {\n  [params, options, callback] = normalizeArguments(params, options, callback);\n\n  // check required parameters\n  if (params.node_id == null && params.nodeId == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: node_id or nodeId');\n    return handleError(err, callback);\n  }\n  if (params.body == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: body');\n    return handleError(err, callback);\n  }\n  let {\n    method,\n    body,\n    nodeId,\n    node_id,\n    ...querystring\n  } = params;\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring);\n  let path = '';\n  if (method == null) method = 'PUT';\n  path = '/' + '_nodes' + '/' + encodeURIComponent(node_id || nodeId) + '/' + 'shutdown';\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  };\n  return this.transport.request(request, options, callback);\n};\nObject.defineProperties(ShutdownApi.prototype, {\n  delete_node: {\n    get() {\n      return this.deleteNode;\n    }\n  },\n  get_node: {\n    get() {\n      return this.getNode;\n    }\n  },\n  put_node: {\n    get() {\n      return this.putNode;\n    }\n  }\n});\nmodule.exports = ShutdownApi;","map":{"version":3,"names":["handleError","snakeCaseKeys","normalizeArguments","kConfigurationError","require","acceptedQuerystring","snakeCase","errorTrace","filterPath","ShutdownApi","transport","ConfigurationError","prototype","deleteNode","shutdownDeleteNodeApi","params","options","callback","node_id","nodeId","err","method","body","querystring","path","encodeURIComponent","request","getNode","shutdownGetNodeApi","putNode","shutdownPutNodeApi","Object","defineProperties","delete_node","get","get_node","put_node","module","exports"],"sources":["C:/search/vue-search/node_modules/@opensearch-project/opensearch/api/api/shutdown.js"],"sourcesContent":["/*\n * Copyright OpenSearch Contributors\n * SPDX-License-Identifier: Apache-2.0\n *\n * The OpenSearch Contributors require contributions made to\n * this file be licensed under the Apache-2.0 license or a\n * compatible open source license.\n *\n */\n\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n'use strict';\n\n/* eslint camelcase: 0 */\n/* eslint no-unused-vars: 0 */\n\nconst { handleError, snakeCaseKeys, normalizeArguments, kConfigurationError } = require('../utils');\nconst acceptedQuerystring = ['pretty', 'human', 'error_trace', 'source', 'filter_path'];\nconst snakeCase = { errorTrace: 'error_trace', filterPath: 'filter_path' };\n\nfunction ShutdownApi(transport, ConfigurationError) {\n  this.transport = transport;\n  this[kConfigurationError] = ConfigurationError;\n}\n\n// TODO: Remove. Added in ES 7.15\nShutdownApi.prototype.deleteNode = function shutdownDeleteNodeApi(params, options, callback) {\n  [params, options, callback] = normalizeArguments(params, options, callback);\n\n  // check required parameters\n  if (params.node_id == null && params.nodeId == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: node_id or nodeId');\n    return handleError(err, callback);\n  }\n\n  let { method, body, nodeId, node_id, ...querystring } = params;\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring);\n\n  let path = '';\n  if (method == null) method = 'DELETE';\n  path = '/' + '_nodes' + '/' + encodeURIComponent(node_id || nodeId) + '/' + 'shutdown';\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring,\n  };\n\n  return this.transport.request(request, options, callback);\n};\n\n// TODO: Remove. Added in ES 7.15\nShutdownApi.prototype.getNode = function shutdownGetNodeApi(params, options, callback) {\n  [params, options, callback] = normalizeArguments(params, options, callback);\n\n  let { method, body, nodeId, node_id, ...querystring } = params;\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring);\n\n  let path = '';\n  if ((node_id || nodeId) != null) {\n    if (method == null) method = 'GET';\n    path = '/' + '_nodes' + '/' + encodeURIComponent(node_id || nodeId) + '/' + 'shutdown';\n  } else {\n    if (method == null) method = 'GET';\n    path = '/' + '_nodes' + '/' + 'shutdown';\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring,\n  };\n\n  return this.transport.request(request, options, callback);\n};\n\n// TODO: Remove. Added in ES 7.15\nShutdownApi.prototype.putNode = function shutdownPutNodeApi(params, options, callback) {\n  [params, options, callback] = normalizeArguments(params, options, callback);\n\n  // check required parameters\n  if (params.node_id == null && params.nodeId == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: node_id or nodeId');\n    return handleError(err, callback);\n  }\n  if (params.body == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: body');\n    return handleError(err, callback);\n  }\n\n  let { method, body, nodeId, node_id, ...querystring } = params;\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring);\n\n  let path = '';\n  if (method == null) method = 'PUT';\n  path = '/' + '_nodes' + '/' + encodeURIComponent(node_id || nodeId) + '/' + 'shutdown';\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring,\n  };\n\n  return this.transport.request(request, options, callback);\n};\n\nObject.defineProperties(ShutdownApi.prototype, {\n  delete_node: {\n    get() {\n      return this.deleteNode;\n    },\n  },\n  get_node: {\n    get() {\n      return this.getNode;\n    },\n  },\n  put_node: {\n    get() {\n      return this.putNode;\n    },\n  },\n});\n\nmodule.exports = ShutdownApi;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ;AACA;AAEA,MAAM;EAAEA,WAAW;EAAEC,aAAa;EAAEC,kBAAkB;EAAEC;AAAoB,CAAC,GAAGC,OAAO,CAAC,UAAU,CAAC;AACnG,MAAMC,mBAAmB,GAAG,CAAC,QAAQ,EAAE,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,aAAa,CAAC;AACvF,MAAMC,SAAS,GAAG;EAAEC,UAAU,EAAE,aAAa;EAAEC,UAAU,EAAE;AAAc,CAAC;AAE1E,SAASC,WAAWA,CAACC,SAAS,EAAEC,kBAAkB,EAAE;EAClD,IAAI,CAACD,SAAS,GAAGA,SAAS;EAC1B,IAAI,CAACP,mBAAmB,CAAC,GAAGQ,kBAAkB;AAChD;;AAEA;AACAF,WAAW,CAACG,SAAS,CAACC,UAAU,GAAG,SAASC,qBAAqBA,CAACC,MAAM,EAAEC,OAAO,EAAEC,QAAQ,EAAE;EAC3F,CAACF,MAAM,EAAEC,OAAO,EAAEC,QAAQ,CAAC,GAAGf,kBAAkB,CAACa,MAAM,EAAEC,OAAO,EAAEC,QAAQ,CAAC;;EAE3E;EACA,IAAIF,MAAM,CAACG,OAAO,IAAI,IAAI,IAAIH,MAAM,CAACI,MAAM,IAAI,IAAI,EAAE;IACnD,MAAMC,GAAG,GAAG,IAAI,IAAI,CAACjB,mBAAmB,CAAC,CAAC,+CAA+C,CAAC;IAC1F,OAAOH,WAAW,CAACoB,GAAG,EAAEH,QAAQ,CAAC;EACnC;EAEA,IAAI;IAAEI,MAAM;IAAEC,IAAI;IAAEH,MAAM;IAAED,OAAO;IAAE,GAAGK;EAAY,CAAC,GAAGR,MAAM;EAC9DQ,WAAW,GAAGtB,aAAa,CAACI,mBAAmB,EAAEC,SAAS,EAAEiB,WAAW,CAAC;EAExE,IAAIC,IAAI,GAAG,EAAE;EACb,IAAIH,MAAM,IAAI,IAAI,EAAEA,MAAM,GAAG,QAAQ;EACrCG,IAAI,GAAG,GAAG,GAAG,QAAQ,GAAG,GAAG,GAAGC,kBAAkB,CAACP,OAAO,IAAIC,MAAM,CAAC,GAAG,GAAG,GAAG,UAAU;;EAEtF;EACA,MAAMO,OAAO,GAAG;IACdL,MAAM;IACNG,IAAI;IACJF,IAAI,EAAEA,IAAI,IAAI,EAAE;IAChBC;EACF,CAAC;EAED,OAAO,IAAI,CAACb,SAAS,CAACgB,OAAO,CAACA,OAAO,EAAEV,OAAO,EAAEC,QAAQ,CAAC;AAC3D,CAAC;;AAED;AACAR,WAAW,CAACG,SAAS,CAACe,OAAO,GAAG,SAASC,kBAAkBA,CAACb,MAAM,EAAEC,OAAO,EAAEC,QAAQ,EAAE;EACrF,CAACF,MAAM,EAAEC,OAAO,EAAEC,QAAQ,CAAC,GAAGf,kBAAkB,CAACa,MAAM,EAAEC,OAAO,EAAEC,QAAQ,CAAC;EAE3E,IAAI;IAAEI,MAAM;IAAEC,IAAI;IAAEH,MAAM;IAAED,OAAO;IAAE,GAAGK;EAAY,CAAC,GAAGR,MAAM;EAC9DQ,WAAW,GAAGtB,aAAa,CAACI,mBAAmB,EAAEC,SAAS,EAAEiB,WAAW,CAAC;EAExE,IAAIC,IAAI,GAAG,EAAE;EACb,IAAI,CAACN,OAAO,IAAIC,MAAM,KAAK,IAAI,EAAE;IAC/B,IAAIE,MAAM,IAAI,IAAI,EAAEA,MAAM,GAAG,KAAK;IAClCG,IAAI,GAAG,GAAG,GAAG,QAAQ,GAAG,GAAG,GAAGC,kBAAkB,CAACP,OAAO,IAAIC,MAAM,CAAC,GAAG,GAAG,GAAG,UAAU;EACxF,CAAC,MAAM;IACL,IAAIE,MAAM,IAAI,IAAI,EAAEA,MAAM,GAAG,KAAK;IAClCG,IAAI,GAAG,GAAG,GAAG,QAAQ,GAAG,GAAG,GAAG,UAAU;EAC1C;;EAEA;EACA,MAAME,OAAO,GAAG;IACdL,MAAM;IACNG,IAAI;IACJF,IAAI,EAAE,IAAI;IACVC;EACF,CAAC;EAED,OAAO,IAAI,CAACb,SAAS,CAACgB,OAAO,CAACA,OAAO,EAAEV,OAAO,EAAEC,QAAQ,CAAC;AAC3D,CAAC;;AAED;AACAR,WAAW,CAACG,SAAS,CAACiB,OAAO,GAAG,SAASC,kBAAkBA,CAACf,MAAM,EAAEC,OAAO,EAAEC,QAAQ,EAAE;EACrF,CAACF,MAAM,EAAEC,OAAO,EAAEC,QAAQ,CAAC,GAAGf,kBAAkB,CAACa,MAAM,EAAEC,OAAO,EAAEC,QAAQ,CAAC;;EAE3E;EACA,IAAIF,MAAM,CAACG,OAAO,IAAI,IAAI,IAAIH,MAAM,CAACI,MAAM,IAAI,IAAI,EAAE;IACnD,MAAMC,GAAG,GAAG,IAAI,IAAI,CAACjB,mBAAmB,CAAC,CAAC,+CAA+C,CAAC;IAC1F,OAAOH,WAAW,CAACoB,GAAG,EAAEH,QAAQ,CAAC;EACnC;EACA,IAAIF,MAAM,CAACO,IAAI,IAAI,IAAI,EAAE;IACvB,MAAMF,GAAG,GAAG,IAAI,IAAI,CAACjB,mBAAmB,CAAC,CAAC,kCAAkC,CAAC;IAC7E,OAAOH,WAAW,CAACoB,GAAG,EAAEH,QAAQ,CAAC;EACnC;EAEA,IAAI;IAAEI,MAAM;IAAEC,IAAI;IAAEH,MAAM;IAAED,OAAO;IAAE,GAAGK;EAAY,CAAC,GAAGR,MAAM;EAC9DQ,WAAW,GAAGtB,aAAa,CAACI,mBAAmB,EAAEC,SAAS,EAAEiB,WAAW,CAAC;EAExE,IAAIC,IAAI,GAAG,EAAE;EACb,IAAIH,MAAM,IAAI,IAAI,EAAEA,MAAM,GAAG,KAAK;EAClCG,IAAI,GAAG,GAAG,GAAG,QAAQ,GAAG,GAAG,GAAGC,kBAAkB,CAACP,OAAO,IAAIC,MAAM,CAAC,GAAG,GAAG,GAAG,UAAU;;EAEtF;EACA,MAAMO,OAAO,GAAG;IACdL,MAAM;IACNG,IAAI;IACJF,IAAI,EAAEA,IAAI,IAAI,EAAE;IAChBC;EACF,CAAC;EAED,OAAO,IAAI,CAACb,SAAS,CAACgB,OAAO,CAACA,OAAO,EAAEV,OAAO,EAAEC,QAAQ,CAAC;AAC3D,CAAC;AAEDc,MAAM,CAACC,gBAAgB,CAACvB,WAAW,CAACG,SAAS,EAAE;EAC7CqB,WAAW,EAAE;IACXC,GAAGA,CAAA,EAAG;MACJ,OAAO,IAAI,CAACrB,UAAU;IACxB;EACF,CAAC;EACDsB,QAAQ,EAAE;IACRD,GAAGA,CAAA,EAAG;MACJ,OAAO,IAAI,CAACP,OAAO;IACrB;EACF,CAAC;EACDS,QAAQ,EAAE;IACRF,GAAGA,CAAA,EAAG;MACJ,OAAO,IAAI,CAACL,OAAO;IACrB;EACF;AACF,CAAC,CAAC;AAEFQ,MAAM,CAACC,OAAO,GAAG7B,WAAW","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}