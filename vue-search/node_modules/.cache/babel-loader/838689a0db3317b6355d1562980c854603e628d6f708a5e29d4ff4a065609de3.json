{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: \"SearchMain\",\n  data() {\n    return {\n      searchQuery: '',\n      synonyms: []\n    };\n  },\n  methods: {\n    async fetchSynonyms() {\n      let query = this.searchQuery.trim();\n\n      // 네이버 맞춤법 검사기 API 호출\n      try {\n        const correctionResponse = await axios.post('https://m.search.naver.com/p/csearch/ocontent/util/SpellerProxy', null, {\n          params: {\n            _callback: 'window.__jindo2_callback._spellingCheck_0',\n            q: query\n          }\n        });\n        const correctedQuery = this.parseCorrectionResponse(correctionResponse.data);\n        if (correctedQuery.length > 0) {\n          query = correctedQuery;\n        }\n      } catch (error) {\n        console.error('Error correcting query:', error);\n      }\n\n      // 교정된 검색어로 네이버 API 호출\n      if (query.length > 0) {\n        try {\n          const response = await axios.get(`/api/v1/search/encyc.json`, {\n            params: {\n              query\n            },\n            headers: {\n              'X-Naver-Client-Id': 'HMfqGNJy1U9czwPDacct',\n              'X-Naver-Client-Secret': 'ncUkkRXeUU'\n            }\n          });\n          this.synonyms = response.data.items.map(item => item.title);\n        } catch (error) {\n          console.error('Error fetching synonyms:', error);\n          this.synonyms = [];\n        }\n      } else {\n        this.synonyms = [];\n      }\n    },\n    parseCorrectionResponse(data) {\n      // 네이버 맞춤법 검사기 API의 콜백 형식을 제거하고 JSON 파싱\n      const jsonString = data.replace(/^window.__jindo2_callback._spellingCheck_0\\((.*)\\);$/, '$1');\n      const jsonData = JSON.parse(jsonString);\n      return jsonData.message.result.html.replace(/<\\/?[^>]+(>|$)/g, \"\"); // HTML 태그 제거\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","searchQuery","synonyms","methods","fetchSynonyms","query","trim","correctionResponse","post","params","_callback","q","correctedQuery","parseCorrectionResponse","length","error","console","response","get","headers","items","map","item","title","jsonString","replace","jsonData","JSON","parse","message","result","html"],"sources":["C:\\search\\vue-search\\src\\views\\SearchMain.vue"],"sourcesContent":["<template>\r\n    <div class=\"wrap\">\r\n      <header class=\"header\">\r\n        <div class=\"search-container\">\r\n          <input \r\n            type=\"search\" \r\n            placeholder=\"검색어 입력\" \r\n            v-model=\"searchQuery\"\r\n            @input=\"fetchSynonyms\"\r\n          />\r\n        </div>\r\n      </header>\r\n      <div class=\"content\">\r\n        <div class=\"context\">\r\n          <div>\r\n            <p>검색어: {{ searchQuery }}</p>\r\n            <p v-if=\"synonyms.length\">동의어 제안: {{ synonyms.join(', ') }}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import axios from 'axios';\r\n  \r\n  export default {\r\n    name: \"SearchMain\",\r\n    data() {\r\n      return {\r\n        searchQuery: '',\r\n        synonyms: []\r\n      };\r\n    },\r\n    methods: {\r\n      async fetchSynonyms() {\r\n        let query = this.searchQuery.trim();\r\n        \r\n        // 네이버 맞춤법 검사기 API 호출\r\n        try {\r\n          const correctionResponse = await axios.post('https://m.search.naver.com/p/csearch/ocontent/util/SpellerProxy', null, {\r\n            params: {\r\n              _callback: 'window.__jindo2_callback._spellingCheck_0',\r\n              q: query\r\n            }\r\n          });\r\n          const correctedQuery = this.parseCorrectionResponse(correctionResponse.data);\r\n          \r\n          if (correctedQuery.length > 0) {\r\n            query = correctedQuery;\r\n          }\r\n        } catch (error) {\r\n          console.error('Error correcting query:', error);\r\n        }\r\n  \r\n        // 교정된 검색어로 네이버 API 호출\r\n        if (query.length > 0) {\r\n          try {\r\n            const response = await axios.get(`/api/v1/search/encyc.json`, {\r\n              params: { query },\r\n              headers: {\r\n                'X-Naver-Client-Id': 'HMfqGNJy1U9czwPDacct',\r\n                'X-Naver-Client-Secret': 'ncUkkRXeUU'\r\n              }\r\n            });\r\n            this.synonyms = response.data.items.map(item => item.title);\r\n          } catch (error) {\r\n            console.error('Error fetching synonyms:', error);\r\n            this.synonyms = [];\r\n          }\r\n        } else {\r\n          this.synonyms = [];\r\n        }\r\n      },\r\n      parseCorrectionResponse(data) {\r\n        // 네이버 맞춤법 검사기 API의 콜백 형식을 제거하고 JSON 파싱\r\n        const jsonString = data.replace(/^window.__jindo2_callback._spellingCheck_0\\((.*)\\);$/, '$1');\r\n        const jsonData = JSON.parse(jsonString);\r\n        return jsonData.message.result.html.replace(/<\\/?[^>]+(>|$)/g, \"\"); // HTML 태그 제거\r\n      }\r\n    }\r\n  };\r\n  </script>"],"mappings":"AAwBE,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,YAAY;EAClBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,WAAW,EAAE,EAAE;MACfC,QAAQ,EAAE;IACZ,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,aAAaA,CAAA,EAAG;MACpB,IAAIC,KAAI,GAAI,IAAI,CAACJ,WAAW,CAACK,IAAI,CAAC,CAAC;;MAEnC;MACA,IAAI;QACF,MAAMC,kBAAiB,GAAI,MAAMT,KAAK,CAACU,IAAI,CAAC,iEAAiE,EAAE,IAAI,EAAE;UACnHC,MAAM,EAAE;YACNC,SAAS,EAAE,2CAA2C;YACtDC,CAAC,EAAEN;UACL;QACF,CAAC,CAAC;QACF,MAAMO,cAAa,GAAI,IAAI,CAACC,uBAAuB,CAACN,kBAAkB,CAACP,IAAI,CAAC;QAE5E,IAAIY,cAAc,CAACE,MAAK,GAAI,CAAC,EAAE;UAC7BT,KAAI,GAAIO,cAAc;QACxB;MACF,EAAE,OAAOG,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD;;MAEA;MACA,IAAIV,KAAK,CAACS,MAAK,GAAI,CAAC,EAAE;QACpB,IAAI;UACF,MAAMG,QAAO,GAAI,MAAMnB,KAAK,CAACoB,GAAG,CAAC,2BAA2B,EAAE;YAC5DT,MAAM,EAAE;cAAEJ;YAAM,CAAC;YACjBc,OAAO,EAAE;cACP,mBAAmB,EAAE,sBAAsB;cAC3C,uBAAuB,EAAE;YAC3B;UACF,CAAC,CAAC;UACF,IAAI,CAACjB,QAAO,GAAIe,QAAQ,CAACjB,IAAI,CAACoB,KAAK,CAACC,GAAG,CAACC,IAAG,IAAKA,IAAI,CAACC,KAAK,CAAC;QAC7D,EAAE,OAAOR,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;UAChD,IAAI,CAACb,QAAO,GAAI,EAAE;QACpB;MACF,OAAO;QACL,IAAI,CAACA,QAAO,GAAI,EAAE;MACpB;IACF,CAAC;IACDW,uBAAuBA,CAACb,IAAI,EAAE;MAC5B;MACA,MAAMwB,UAAS,GAAIxB,IAAI,CAACyB,OAAO,CAAC,sDAAsD,EAAE,IAAI,CAAC;MAC7F,MAAMC,QAAO,GAAIC,IAAI,CAACC,KAAK,CAACJ,UAAU,CAAC;MACvC,OAAOE,QAAQ,CAACG,OAAO,CAACC,MAAM,CAACC,IAAI,CAACN,OAAO,CAAC,iBAAiB,EAAE,EAAE,CAAC,EAAE;IACtE;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}