{"ast":null,"code":"/*\n * Copyright OpenSearch Contributors\n * SPDX-License-Identifier: Apache-2.0\n *\n * The OpenSearch Contributors require contributions made to\n * this file be licensed under the Apache-2.0 license or a\n * compatible open source license.\n *\n */\n\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n'use strict';\n\nconst BaseConnectionPool = require('./BaseConnectionPool');\nconst noop = () => {};\nclass CloudConnectionPool extends BaseConnectionPool {\n  constructor(opts) {\n    super(opts);\n    this.cloudConnection = null;\n  }\n\n  /**\n   * Returns the only cloud connection.\n   *\n   * @returns {object} connection\n   */\n  getConnection() {\n    return this.cloudConnection;\n  }\n\n  /**\n   * Empties the connection pool.\n   *\n   */\n  empty(callback = noop) {\n    super.empty(() => {\n      this.cloudConnection = null;\n      callback();\n    });\n  }\n\n  /**\n   * Update the ConnectionPool with new connections.\n   *\n   * @param {array} array of connections\n   * @returns {ConnectionPool}\n   */\n  update(connections) {\n    super.update(connections);\n    this.cloudConnection = this.connections[0];\n    return this;\n  }\n}\nmodule.exports = CloudConnectionPool;","map":{"version":3,"names":["BaseConnectionPool","require","noop","CloudConnectionPool","constructor","opts","cloudConnection","getConnection","empty","callback","update","connections","module","exports"],"sources":["C:/search/vue-search/node_modules/@opensearch-project/opensearch/lib/pool/CloudConnectionPool.js"],"sourcesContent":["/*\n * Copyright OpenSearch Contributors\n * SPDX-License-Identifier: Apache-2.0\n *\n * The OpenSearch Contributors require contributions made to\n * this file be licensed under the Apache-2.0 license or a\n * compatible open source license.\n *\n */\n\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n'use strict';\n\nconst BaseConnectionPool = require('./BaseConnectionPool');\nconst noop = () => {};\n\nclass CloudConnectionPool extends BaseConnectionPool {\n  constructor(opts) {\n    super(opts);\n    this.cloudConnection = null;\n  }\n\n  /**\n   * Returns the only cloud connection.\n   *\n   * @returns {object} connection\n   */\n  getConnection() {\n    return this.cloudConnection;\n  }\n\n  /**\n   * Empties the connection pool.\n   *\n   */\n  empty(callback = noop) {\n    super.empty(() => {\n      this.cloudConnection = null;\n      callback();\n    });\n  }\n\n  /**\n   * Update the ConnectionPool with new connections.\n   *\n   * @param {array} array of connections\n   * @returns {ConnectionPool}\n   */\n  update(connections) {\n    super.update(connections);\n    this.cloudConnection = this.connections[0];\n    return this;\n  }\n}\n\nmodule.exports = CloudConnectionPool;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,MAAMA,kBAAkB,GAAGC,OAAO,CAAC,sBAAsB,CAAC;AAC1D,MAAMC,IAAI,GAAGA,CAAA,KAAM,CAAC,CAAC;AAErB,MAAMC,mBAAmB,SAASH,kBAAkB,CAAC;EACnDI,WAAWA,CAACC,IAAI,EAAE;IAChB,KAAK,CAACA,IAAI,CAAC;IACX,IAAI,CAACC,eAAe,GAAG,IAAI;EAC7B;;EAEA;AACF;AACA;AACA;AACA;EACEC,aAAaA,CAAA,EAAG;IACd,OAAO,IAAI,CAACD,eAAe;EAC7B;;EAEA;AACF;AACA;AACA;EACEE,KAAKA,CAACC,QAAQ,GAAGP,IAAI,EAAE;IACrB,KAAK,CAACM,KAAK,CAAC,MAAM;MAChB,IAAI,CAACF,eAAe,GAAG,IAAI;MAC3BG,QAAQ,CAAC,CAAC;IACZ,CAAC,CAAC;EACJ;;EAEA;AACF;AACA;AACA;AACA;AACA;EACEC,MAAMA,CAACC,WAAW,EAAE;IAClB,KAAK,CAACD,MAAM,CAACC,WAAW,CAAC;IACzB,IAAI,CAACL,eAAe,GAAG,IAAI,CAACK,WAAW,CAAC,CAAC,CAAC;IAC1C,OAAO,IAAI;EACb;AACF;AAEAC,MAAM,CAACC,OAAO,GAAGV,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}