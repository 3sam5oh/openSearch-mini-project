{"ast":null,"code":"/*\n * Copyright OpenSearch Contributors\n * SPDX-License-Identifier: Apache-2.0\n *\n * The OpenSearch Contributors require contributions made to\n * this file be licensed under the Apache-2.0 license or a\n * compatible open source license.\n *\n */\n\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n'use strict';\n\n/* eslint camelcase: 0 */\n/* eslint no-unused-vars: 0 */\nconst {\n  handleError,\n  snakeCaseKeys,\n  normalizeArguments,\n  kConfigurationError\n} = require('../utils');\nconst acceptedQuerystring = ['cluster_manager_timeout', 'timeout', 'master_timeout', 'context', 'pretty', 'human', 'error_trace', 'source', 'filter_path'];\nconst snakeCase = {\n  clusterManagerTimeout: 'cluster_manager_timeout',\n  masterTimeout: 'master_timeout',\n  errorTrace: 'error_trace',\n  filterPath: 'filter_path'\n};\n\n/**\n * Creates or updates a script.\n * <br/> See also: {@link https://opensearch.org/docs/latest/api-reference/script-apis/create-stored-script/ OpenSearch - Create or update stored script}\n * @memberOf API-Script\n *\n * @param {Object} params\n * @param {string} params.id - Stored script or search template name\n * @param {string} params.body - The script\n * @param {string} [params.context] - Context in which the script or search template is to run. To prevent errors, the API immediately compiles the script or template in this context.\n * @param {string} [params.timeout=30s] - Explicit operation timeout\n * @param {string} [params.cluster_manager_timeout] - Specify timeout for connection to cluster_manager\n *\n * @param {Object} [options] - Options for {@link Transport#request}\n * @param {function} [callback] - Callback that handles errors and response\n *\n * @returns {{abort: function(), then: function(), catch: function()}|Promise<never>|*}\n */\nfunction putScriptApi(params, options, callback) {\n  [params, options, callback] = normalizeArguments(params, options, callback);\n\n  // check required parameters\n  if (params.id == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: id');\n    return handleError(err, callback);\n  }\n  if (params.body == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: body');\n    return handleError(err, callback);\n  }\n\n  // check required url components\n  if (params.context != null && params.id == null) {\n    const err = new this[kConfigurationError]('Missing required parameter of the url: id');\n    return handleError(err, callback);\n  }\n  let {\n    method,\n    body,\n    id,\n    context,\n    ...querystring\n  } = params;\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring);\n  let path = '';\n  if (id != null && context != null) {\n    if (method == null) method = 'PUT';\n    path = '/' + '_scripts' + '/' + encodeURIComponent(id) + '/' + encodeURIComponent(context);\n  } else {\n    if (method == null) method = 'PUT';\n    path = '/' + '_scripts' + '/' + encodeURIComponent(id);\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  };\n  return this.transport.request(request, options, callback);\n}\nmodule.exports = putScriptApi;","map":{"version":3,"names":["handleError","snakeCaseKeys","normalizeArguments","kConfigurationError","require","acceptedQuerystring","snakeCase","clusterManagerTimeout","masterTimeout","errorTrace","filterPath","putScriptApi","params","options","callback","id","err","body","context","method","querystring","path","encodeURIComponent","request","transport","module","exports"],"sources":["C:/search/vue-search/node_modules/@opensearch-project/opensearch/api/api/put_script.js"],"sourcesContent":["/*\n * Copyright OpenSearch Contributors\n * SPDX-License-Identifier: Apache-2.0\n *\n * The OpenSearch Contributors require contributions made to\n * this file be licensed under the Apache-2.0 license or a\n * compatible open source license.\n *\n */\n\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n'use strict';\n\n/* eslint camelcase: 0 */\n/* eslint no-unused-vars: 0 */\n\nconst { handleError, snakeCaseKeys, normalizeArguments, kConfigurationError } = require('../utils');\nconst acceptedQuerystring = [\n  'cluster_manager_timeout',\n  'timeout',\n  'master_timeout',\n  'context',\n  'pretty',\n  'human',\n  'error_trace',\n  'source',\n  'filter_path',\n];\nconst snakeCase = {\n  clusterManagerTimeout: 'cluster_manager_timeout',\n  masterTimeout: 'master_timeout',\n  errorTrace: 'error_trace',\n  filterPath: 'filter_path',\n};\n\n/**\n * Creates or updates a script.\n * <br/> See also: {@link https://opensearch.org/docs/latest/api-reference/script-apis/create-stored-script/ OpenSearch - Create or update stored script}\n * @memberOf API-Script\n *\n * @param {Object} params\n * @param {string} params.id - Stored script or search template name\n * @param {string} params.body - The script\n * @param {string} [params.context] - Context in which the script or search template is to run. To prevent errors, the API immediately compiles the script or template in this context.\n * @param {string} [params.timeout=30s] - Explicit operation timeout\n * @param {string} [params.cluster_manager_timeout] - Specify timeout for connection to cluster_manager\n *\n * @param {Object} [options] - Options for {@link Transport#request}\n * @param {function} [callback] - Callback that handles errors and response\n *\n * @returns {{abort: function(), then: function(), catch: function()}|Promise<never>|*}\n */\nfunction putScriptApi(params, options, callback) {\n  [params, options, callback] = normalizeArguments(params, options, callback);\n\n  // check required parameters\n  if (params.id == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: id');\n    return handleError(err, callback);\n  }\n  if (params.body == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: body');\n    return handleError(err, callback);\n  }\n\n  // check required url components\n  if (params.context != null && params.id == null) {\n    const err = new this[kConfigurationError]('Missing required parameter of the url: id');\n    return handleError(err, callback);\n  }\n\n  let { method, body, id, context, ...querystring } = params;\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring);\n\n  let path = '';\n  if (id != null && context != null) {\n    if (method == null) method = 'PUT';\n    path = '/' + '_scripts' + '/' + encodeURIComponent(id) + '/' + encodeURIComponent(context);\n  } else {\n    if (method == null) method = 'PUT';\n    path = '/' + '_scripts' + '/' + encodeURIComponent(id);\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring,\n  };\n\n  return this.transport.request(request, options, callback);\n}\n\nmodule.exports = putScriptApi;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ;AACA;AAEA,MAAM;EAAEA,WAAW;EAAEC,aAAa;EAAEC,kBAAkB;EAAEC;AAAoB,CAAC,GAAGC,OAAO,CAAC,UAAU,CAAC;AACnG,MAAMC,mBAAmB,GAAG,CAC1B,yBAAyB,EACzB,SAAS,EACT,gBAAgB,EAChB,SAAS,EACT,QAAQ,EACR,OAAO,EACP,aAAa,EACb,QAAQ,EACR,aAAa,CACd;AACD,MAAMC,SAAS,GAAG;EAChBC,qBAAqB,EAAE,yBAAyB;EAChDC,aAAa,EAAE,gBAAgB;EAC/BC,UAAU,EAAE,aAAa;EACzBC,UAAU,EAAE;AACd,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,YAAYA,CAACC,MAAM,EAAEC,OAAO,EAAEC,QAAQ,EAAE;EAC/C,CAACF,MAAM,EAAEC,OAAO,EAAEC,QAAQ,CAAC,GAAGZ,kBAAkB,CAACU,MAAM,EAAEC,OAAO,EAAEC,QAAQ,CAAC;;EAE3E;EACA,IAAIF,MAAM,CAACG,EAAE,IAAI,IAAI,EAAE;IACrB,MAAMC,GAAG,GAAG,IAAI,IAAI,CAACb,mBAAmB,CAAC,CAAC,gCAAgC,CAAC;IAC3E,OAAOH,WAAW,CAACgB,GAAG,EAAEF,QAAQ,CAAC;EACnC;EACA,IAAIF,MAAM,CAACK,IAAI,IAAI,IAAI,EAAE;IACvB,MAAMD,GAAG,GAAG,IAAI,IAAI,CAACb,mBAAmB,CAAC,CAAC,kCAAkC,CAAC;IAC7E,OAAOH,WAAW,CAACgB,GAAG,EAAEF,QAAQ,CAAC;EACnC;;EAEA;EACA,IAAIF,MAAM,CAACM,OAAO,IAAI,IAAI,IAAIN,MAAM,CAACG,EAAE,IAAI,IAAI,EAAE;IAC/C,MAAMC,GAAG,GAAG,IAAI,IAAI,CAACb,mBAAmB,CAAC,CAAC,2CAA2C,CAAC;IACtF,OAAOH,WAAW,CAACgB,GAAG,EAAEF,QAAQ,CAAC;EACnC;EAEA,IAAI;IAAEK,MAAM;IAAEF,IAAI;IAAEF,EAAE;IAAEG,OAAO;IAAE,GAAGE;EAAY,CAAC,GAAGR,MAAM;EAC1DQ,WAAW,GAAGnB,aAAa,CAACI,mBAAmB,EAAEC,SAAS,EAAEc,WAAW,CAAC;EAExE,IAAIC,IAAI,GAAG,EAAE;EACb,IAAIN,EAAE,IAAI,IAAI,IAAIG,OAAO,IAAI,IAAI,EAAE;IACjC,IAAIC,MAAM,IAAI,IAAI,EAAEA,MAAM,GAAG,KAAK;IAClCE,IAAI,GAAG,GAAG,GAAG,UAAU,GAAG,GAAG,GAAGC,kBAAkB,CAACP,EAAE,CAAC,GAAG,GAAG,GAAGO,kBAAkB,CAACJ,OAAO,CAAC;EAC5F,CAAC,MAAM;IACL,IAAIC,MAAM,IAAI,IAAI,EAAEA,MAAM,GAAG,KAAK;IAClCE,IAAI,GAAG,GAAG,GAAG,UAAU,GAAG,GAAG,GAAGC,kBAAkB,CAACP,EAAE,CAAC;EACxD;;EAEA;EACA,MAAMQ,OAAO,GAAG;IACdJ,MAAM;IACNE,IAAI;IACJJ,IAAI,EAAEA,IAAI,IAAI,EAAE;IAChBG;EACF,CAAC;EAED,OAAO,IAAI,CAACI,SAAS,CAACD,OAAO,CAACA,OAAO,EAAEV,OAAO,EAAEC,QAAQ,CAAC;AAC3D;AAEAW,MAAM,CAACC,OAAO,GAAGf,YAAY","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}