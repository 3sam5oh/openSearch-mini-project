{"ast":null,"code":"/*\n * Copyright OpenSearch Contributors\n * SPDX-License-Identifier: Apache-2.0\n *\n * The OpenSearch Contributors require contributions made to\n * this file be licensed under the Apache-2.0 license or a\n * compatible open source license.\n *\n */\n\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n'use strict';\n\nconst assert = require('assert');\nconst {\n  inspect\n} = require('util');\nconst hpagent = require('hpagent');\nconst http = require('http');\nconst https = require('https');\nconst debug = require('debug')('opensearch');\nconst {\n  pipeline\n} = require('stream');\nconst INVALID_PATH_REGEX = /[^\\u0021-\\u00ff]/;\nconst {\n  ConnectionError,\n  RequestAbortedError,\n  TimeoutError,\n  ConfigurationError\n} = require('./errors');\nclass Connection {\n  constructor(opts) {\n    this.url = opts.url;\n    this.ssl = opts.ssl || null;\n    this.id = opts.id || stripAuth(opts.url.href);\n    this.headers = prepareHeaders(opts.headers, opts.auth);\n    this.deadCount = 0;\n    this.resurrectTimeout = 0;\n    this._openRequests = 0;\n    this._status = opts.status || Connection.statuses.ALIVE;\n    this.roles = Object.assign({}, defaultRoles, opts.roles);\n    if (!['http:', 'https:'].includes(this.url.protocol)) {\n      throw new ConfigurationError(`Invalid protocol: '${this.url.protocol}'`);\n    }\n    if (typeof opts.agent === 'function') {\n      this.agent = opts.agent(opts);\n    } else if (opts.agent === false) {\n      this.agent = undefined;\n    } else {\n      const agentOptions = Object.assign({}, {\n        keepAlive: true,\n        keepAliveMsecs: 1000,\n        maxSockets: 256,\n        maxFreeSockets: 256,\n        scheduling: 'lifo'\n      }, opts.agent);\n      if (opts.proxy) {\n        agentOptions.proxy = opts.proxy;\n        this.agent = this.url.protocol === 'http:' ? new hpagent.HttpProxyAgent(agentOptions) : new hpagent.HttpsProxyAgent(Object.assign({}, agentOptions, this.ssl));\n      } else {\n        this.agent = this.url.protocol === 'http:' ? new http.Agent(agentOptions) : new https.Agent(Object.assign({}, agentOptions, this.ssl));\n      }\n    }\n    this.makeRequest = this.url.protocol === 'http:' ? http.request : https.request;\n  }\n  request(params, callback) {\n    this._openRequests++;\n    let cleanedListeners = false;\n    const requestParams = this.buildRequestObject(params);\n    // https://github.com/nodejs/node/commit/b961d9fd83\n    if (INVALID_PATH_REGEX.test(requestParams.path) === true) {\n      callback(new TypeError(`ERR_UNESCAPED_CHARACTERS: ${requestParams.path}`), null);\n      /* istanbul ignore next */\n      return {\n        abort: () => {}\n      };\n    }\n    debug('Starting a new request', params);\n    const request = this.makeRequest(requestParams);\n    const onResponse = response => {\n      cleanListeners();\n      this._openRequests--;\n      callback(null, response);\n    };\n    const onTimeout = () => {\n      cleanListeners();\n      this._openRequests--;\n      request.once('error', () => {}); // we need to catch the request aborted error\n      request.abort();\n      callback(new TimeoutError('Request timed out', params), null);\n    };\n    const onError = err => {\n      cleanListeners();\n      this._openRequests--;\n      callback(new ConnectionError(err.message), null);\n    };\n    const onAbort = () => {\n      cleanListeners();\n      request.once('error', () => {}); // we need to catch the request aborted error\n      debug('Request aborted', params);\n      this._openRequests--;\n      callback(new RequestAbortedError('Request aborted'), null);\n    };\n    request.on('response', onResponse);\n    request.on('timeout', onTimeout);\n    request.on('error', onError);\n    request.on('abort', onAbort);\n\n    // Disables the Nagle algorithm\n    request.setNoDelay(true);\n\n    // starts the request\n    if (isStream(params.body) === true) {\n      pipeline(params.body, request, err => {\n        /* istanbul ignore if  */\n        if (err != null && cleanedListeners === false) {\n          cleanListeners();\n          this._openRequests--;\n          callback(err, null);\n        }\n      });\n    } else {\n      request.end(params.body);\n    }\n    return request;\n    function cleanListeners() {\n      request.removeListener('response', onResponse);\n      request.removeListener('timeout', onTimeout);\n      request.removeListener('error', onError);\n      request.removeListener('abort', onAbort);\n      cleanedListeners = true;\n    }\n  }\n\n  // TODO: write a better closing logic\n  close(callback = () => {}) {\n    debug('Closing connection', this.id);\n    if (this._openRequests > 0) {\n      setTimeout(() => this.close(callback), 1000);\n    } else {\n      if (this.agent !== undefined) {\n        this.agent.destroy();\n      }\n      callback();\n    }\n  }\n  setRole(role, enabled) {\n    if (validRoles.indexOf(role) === -1) {\n      throw new ConfigurationError(`Unsupported role: '${role}'`);\n    }\n    if (typeof enabled !== 'boolean') {\n      throw new ConfigurationError('enabled should be a boolean');\n    }\n    this.roles[role] = enabled;\n    return this;\n  }\n  get status() {\n    return this._status;\n  }\n  set status(status) {\n    assert(~validStatuses.indexOf(status), `Unsupported status: '${status}'`);\n    this._status = status;\n  }\n  buildRequestObject(params) {\n    const url = this.url;\n    const request = {\n      protocol: url.protocol,\n      hostname: url.hostname[0] === '[' ? url.hostname.slice(1, -1) : url.hostname,\n      hash: url.hash,\n      search: url.search,\n      pathname: url.pathname,\n      path: '',\n      href: url.href,\n      origin: url.origin,\n      // https://github.com/elastic/elasticsearch-js/issues/843\n      port: url.port !== '' ? url.port : undefined,\n      headers: Object.assign({}, this.headers),\n      agent: this.agent\n    };\n    const paramsKeys = Object.keys(params);\n    for (let i = 0, len = paramsKeys.length; i < len; i++) {\n      const key = paramsKeys[i];\n      if (key === 'path') {\n        request.pathname = resolve(request.pathname, params[key]);\n      } else if (key === 'querystring' && !!params[key] === true) {\n        if (request.search === '') {\n          request.search = '?' + params[key];\n        } else {\n          request.search += '&' + params[key];\n        }\n      } else if (key === 'headers') {\n        request.headers = Object.assign({}, request.headers, params.headers);\n      } else {\n        request[key] = params[key];\n      }\n    }\n    request.path = request.pathname + request.search;\n    return request;\n  }\n\n  // Handles console.log and utils.inspect invocations.\n  // We want to hide `auth`, `agent` and `ssl` since they made\n  // the logs very hard to read. The user can still\n  // access them with `instance.agent` and `instance.ssl`.\n  [inspect.custom]() {\n    // eslint-disable-next-line no-unused-vars\n    const {\n      authorization,\n      ...headers\n    } = this.headers;\n    return {\n      url: stripAuth(this.url.toString()),\n      id: this.id,\n      headers,\n      deadCount: this.deadCount,\n      resurrectTimeout: this.resurrectTimeout,\n      _openRequests: this._openRequests,\n      status: this.status,\n      roles: this.roles\n    };\n  }\n  toJSON() {\n    // eslint-disable-next-line no-unused-vars\n    const {\n      authorization,\n      ...headers\n    } = this.headers;\n    return {\n      url: stripAuth(this.url.toString()),\n      id: this.id,\n      headers,\n      deadCount: this.deadCount,\n      resurrectTimeout: this.resurrectTimeout,\n      _openRequests: this._openRequests,\n      status: this.status,\n      roles: this.roles\n    };\n  }\n}\nConnection.statuses = {\n  ALIVE: 'alive',\n  DEAD: 'dead'\n};\nConnection.roles = {\n  CLUSTER_MANAGER: 'cluster_manager',\n  /**\n   * @deprecated use CLUSTER_MANAGER instead\n   */\n  MASTER: 'master',\n  DATA: 'data',\n  INGEST: 'ingest'\n};\nconst defaultRoles = {\n  [Connection.roles.DATA]: true,\n  [Connection.roles.INGEST]: true\n};\nconst validStatuses = Object.keys(Connection.statuses).map(k => Connection.statuses[k]);\nconst validRoles = Object.keys(Connection.roles).map(k => Connection.roles[k]);\nfunction stripAuth(url) {\n  if (url.indexOf('@') === -1) return url;\n  return url.slice(0, url.indexOf('//') + 2) + url.slice(url.indexOf('@') + 1);\n}\nfunction isStream(obj) {\n  return obj != null && typeof obj.pipe === 'function';\n}\nfunction resolve(host, path) {\n  const hostEndWithSlash = host[host.length - 1] === '/';\n  const pathStartsWithSlash = path[0] === '/';\n  if (hostEndWithSlash === true && pathStartsWithSlash === true) {\n    return host + path.slice(1);\n  } else if (hostEndWithSlash !== pathStartsWithSlash) {\n    return host + path;\n  } else {\n    return host + '/' + path;\n  }\n}\nfunction prepareHeaders(headers = {}, auth) {\n  if (auth != null && headers.authorization == null) {\n    /* istanbul ignore else */\n    if (auth.username && auth.password) {\n      headers.authorization = 'Basic ' + Buffer.from(`${auth.username}:${auth.password}`).toString('base64');\n    }\n  }\n  return headers;\n}\nmodule.exports = Connection;\nmodule.exports.internals = {\n  prepareHeaders\n};","map":{"version":3,"names":["assert","require","inspect","hpagent","http","https","debug","pipeline","INVALID_PATH_REGEX","ConnectionError","RequestAbortedError","TimeoutError","ConfigurationError","Connection","constructor","opts","url","ssl","id","stripAuth","href","headers","prepareHeaders","auth","deadCount","resurrectTimeout","_openRequests","_status","status","statuses","ALIVE","roles","Object","assign","defaultRoles","includes","protocol","agent","undefined","agentOptions","keepAlive","keepAliveMsecs","maxSockets","maxFreeSockets","scheduling","proxy","HttpProxyAgent","HttpsProxyAgent","Agent","makeRequest","request","params","callback","cleanedListeners","requestParams","buildRequestObject","test","path","TypeError","abort","onResponse","response","cleanListeners","onTimeout","once","onError","err","message","onAbort","on","setNoDelay","isStream","body","end","removeListener","close","setTimeout","destroy","setRole","role","enabled","validRoles","indexOf","validStatuses","hostname","slice","hash","search","pathname","origin","port","paramsKeys","keys","i","len","length","key","resolve","custom","authorization","toString","toJSON","DEAD","CLUSTER_MANAGER","MASTER","DATA","INGEST","map","k","obj","pipe","host","hostEndWithSlash","pathStartsWithSlash","username","password","Buffer","from","module","exports","internals"],"sources":["C:/search/vue-search/node_modules/@opensearch-project/opensearch/lib/Connection.js"],"sourcesContent":["/*\n * Copyright OpenSearch Contributors\n * SPDX-License-Identifier: Apache-2.0\n *\n * The OpenSearch Contributors require contributions made to\n * this file be licensed under the Apache-2.0 license or a\n * compatible open source license.\n *\n */\n\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n'use strict';\n\nconst assert = require('assert');\nconst { inspect } = require('util');\nconst hpagent = require('hpagent');\nconst http = require('http');\nconst https = require('https');\nconst debug = require('debug')('opensearch');\nconst { pipeline } = require('stream');\nconst INVALID_PATH_REGEX = /[^\\u0021-\\u00ff]/;\nconst {\n  ConnectionError,\n  RequestAbortedError,\n  TimeoutError,\n  ConfigurationError,\n} = require('./errors');\n\nclass Connection {\n  constructor(opts) {\n    this.url = opts.url;\n    this.ssl = opts.ssl || null;\n    this.id = opts.id || stripAuth(opts.url.href);\n    this.headers = prepareHeaders(opts.headers, opts.auth);\n    this.deadCount = 0;\n    this.resurrectTimeout = 0;\n\n    this._openRequests = 0;\n    this._status = opts.status || Connection.statuses.ALIVE;\n    this.roles = Object.assign({}, defaultRoles, opts.roles);\n\n    if (!['http:', 'https:'].includes(this.url.protocol)) {\n      throw new ConfigurationError(`Invalid protocol: '${this.url.protocol}'`);\n    }\n\n    if (typeof opts.agent === 'function') {\n      this.agent = opts.agent(opts);\n    } else if (opts.agent === false) {\n      this.agent = undefined;\n    } else {\n      const agentOptions = Object.assign(\n        {},\n        {\n          keepAlive: true,\n          keepAliveMsecs: 1000,\n          maxSockets: 256,\n          maxFreeSockets: 256,\n          scheduling: 'lifo',\n        },\n        opts.agent\n      );\n      if (opts.proxy) {\n        agentOptions.proxy = opts.proxy;\n        this.agent =\n          this.url.protocol === 'http:'\n            ? new hpagent.HttpProxyAgent(agentOptions)\n            : new hpagent.HttpsProxyAgent(Object.assign({}, agentOptions, this.ssl));\n      } else {\n        this.agent =\n          this.url.protocol === 'http:'\n            ? new http.Agent(agentOptions)\n            : new https.Agent(Object.assign({}, agentOptions, this.ssl));\n      }\n    }\n\n    this.makeRequest = this.url.protocol === 'http:' ? http.request : https.request;\n  }\n\n  request(params, callback) {\n    this._openRequests++;\n    let cleanedListeners = false;\n\n    const requestParams = this.buildRequestObject(params);\n    // https://github.com/nodejs/node/commit/b961d9fd83\n    if (INVALID_PATH_REGEX.test(requestParams.path) === true) {\n      callback(new TypeError(`ERR_UNESCAPED_CHARACTERS: ${requestParams.path}`), null);\n      /* istanbul ignore next */\n      return { abort: () => {} };\n    }\n\n    debug('Starting a new request', params);\n    const request = this.makeRequest(requestParams);\n\n    const onResponse = (response) => {\n      cleanListeners();\n      this._openRequests--;\n      callback(null, response);\n    };\n\n    const onTimeout = () => {\n      cleanListeners();\n      this._openRequests--;\n      request.once('error', () => {}); // we need to catch the request aborted error\n      request.abort();\n      callback(new TimeoutError('Request timed out', params), null);\n    };\n\n    const onError = (err) => {\n      cleanListeners();\n      this._openRequests--;\n      callback(new ConnectionError(err.message), null);\n    };\n\n    const onAbort = () => {\n      cleanListeners();\n      request.once('error', () => {}); // we need to catch the request aborted error\n      debug('Request aborted', params);\n      this._openRequests--;\n      callback(new RequestAbortedError('Request aborted'), null);\n    };\n\n    request.on('response', onResponse);\n    request.on('timeout', onTimeout);\n    request.on('error', onError);\n    request.on('abort', onAbort);\n\n    // Disables the Nagle algorithm\n    request.setNoDelay(true);\n\n    // starts the request\n    if (isStream(params.body) === true) {\n      pipeline(params.body, request, (err) => {\n        /* istanbul ignore if  */\n        if (err != null && cleanedListeners === false) {\n          cleanListeners();\n          this._openRequests--;\n          callback(err, null);\n        }\n      });\n    } else {\n      request.end(params.body);\n    }\n\n    return request;\n\n    function cleanListeners() {\n      request.removeListener('response', onResponse);\n      request.removeListener('timeout', onTimeout);\n      request.removeListener('error', onError);\n      request.removeListener('abort', onAbort);\n      cleanedListeners = true;\n    }\n  }\n\n  // TODO: write a better closing logic\n  close(callback = () => {}) {\n    debug('Closing connection', this.id);\n    if (this._openRequests > 0) {\n      setTimeout(() => this.close(callback), 1000);\n    } else {\n      if (this.agent !== undefined) {\n        this.agent.destroy();\n      }\n      callback();\n    }\n  }\n\n  setRole(role, enabled) {\n    if (validRoles.indexOf(role) === -1) {\n      throw new ConfigurationError(`Unsupported role: '${role}'`);\n    }\n    if (typeof enabled !== 'boolean') {\n      throw new ConfigurationError('enabled should be a boolean');\n    }\n\n    this.roles[role] = enabled;\n    return this;\n  }\n\n  get status() {\n    return this._status;\n  }\n\n  set status(status) {\n    assert(~validStatuses.indexOf(status), `Unsupported status: '${status}'`);\n    this._status = status;\n  }\n\n  buildRequestObject(params) {\n    const url = this.url;\n    const request = {\n      protocol: url.protocol,\n      hostname: url.hostname[0] === '[' ? url.hostname.slice(1, -1) : url.hostname,\n      hash: url.hash,\n      search: url.search,\n      pathname: url.pathname,\n      path: '',\n      href: url.href,\n      origin: url.origin,\n      // https://github.com/elastic/elasticsearch-js/issues/843\n      port: url.port !== '' ? url.port : undefined,\n      headers: Object.assign({}, this.headers),\n      agent: this.agent,\n    };\n\n    const paramsKeys = Object.keys(params);\n    for (let i = 0, len = paramsKeys.length; i < len; i++) {\n      const key = paramsKeys[i];\n      if (key === 'path') {\n        request.pathname = resolve(request.pathname, params[key]);\n      } else if (key === 'querystring' && !!params[key] === true) {\n        if (request.search === '') {\n          request.search = '?' + params[key];\n        } else {\n          request.search += '&' + params[key];\n        }\n      } else if (key === 'headers') {\n        request.headers = Object.assign({}, request.headers, params.headers);\n      } else {\n        request[key] = params[key];\n      }\n    }\n\n    request.path = request.pathname + request.search;\n\n    return request;\n  }\n\n  // Handles console.log and utils.inspect invocations.\n  // We want to hide `auth`, `agent` and `ssl` since they made\n  // the logs very hard to read. The user can still\n  // access them with `instance.agent` and `instance.ssl`.\n  [inspect.custom]() {\n    // eslint-disable-next-line no-unused-vars\n    const { authorization, ...headers } = this.headers;\n\n    return {\n      url: stripAuth(this.url.toString()),\n      id: this.id,\n      headers,\n      deadCount: this.deadCount,\n      resurrectTimeout: this.resurrectTimeout,\n      _openRequests: this._openRequests,\n      status: this.status,\n      roles: this.roles,\n    };\n  }\n\n  toJSON() {\n    // eslint-disable-next-line no-unused-vars\n    const { authorization, ...headers } = this.headers;\n\n    return {\n      url: stripAuth(this.url.toString()),\n      id: this.id,\n      headers,\n      deadCount: this.deadCount,\n      resurrectTimeout: this.resurrectTimeout,\n      _openRequests: this._openRequests,\n      status: this.status,\n      roles: this.roles,\n    };\n  }\n}\n\nConnection.statuses = {\n  ALIVE: 'alive',\n  DEAD: 'dead',\n};\n\nConnection.roles = {\n  CLUSTER_MANAGER: 'cluster_manager',\n  /**\n   * @deprecated use CLUSTER_MANAGER instead\n   */\n  MASTER: 'master',\n  DATA: 'data',\n  INGEST: 'ingest',\n};\n\nconst defaultRoles = {\n  [Connection.roles.DATA]: true,\n  [Connection.roles.INGEST]: true,\n};\n\nconst validStatuses = Object.keys(Connection.statuses).map((k) => Connection.statuses[k]);\nconst validRoles = Object.keys(Connection.roles).map((k) => Connection.roles[k]);\n\nfunction stripAuth(url) {\n  if (url.indexOf('@') === -1) return url;\n  return url.slice(0, url.indexOf('//') + 2) + url.slice(url.indexOf('@') + 1);\n}\n\nfunction isStream(obj) {\n  return obj != null && typeof obj.pipe === 'function';\n}\n\nfunction resolve(host, path) {\n  const hostEndWithSlash = host[host.length - 1] === '/';\n  const pathStartsWithSlash = path[0] === '/';\n\n  if (hostEndWithSlash === true && pathStartsWithSlash === true) {\n    return host + path.slice(1);\n  } else if (hostEndWithSlash !== pathStartsWithSlash) {\n    return host + path;\n  } else {\n    return host + '/' + path;\n  }\n}\n\nfunction prepareHeaders(headers = {}, auth) {\n  if (auth != null && headers.authorization == null) {\n    /* istanbul ignore else */\n    if (auth.username && auth.password) {\n      headers.authorization =\n        'Basic ' + Buffer.from(`${auth.username}:${auth.password}`).toString('base64');\n    }\n  }\n  return headers;\n}\n\nmodule.exports = Connection;\nmodule.exports.internals = { prepareHeaders };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}