{"ast":null,"code":"/*\n * Copyright OpenSearch Contributors\n * SPDX-License-Identifier: Apache-2.0\n *\n * The OpenSearch Contributors require contributions made to\n * this file be licensed under the Apache-2.0 license or a\n * compatible open source license.\n *\n */\n\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n'use strict';\n\nrequire(\"core-js/modules/es.array.push.js\");\nconst {\n  EventEmitter\n} = require('events');\nconst {\n  URL\n} = require('url');\nconst debug = require('debug')('opensearch');\nconst Transport = require('./lib/Transport');\nconst Connection = require('./lib/Connection');\nconst {\n  ConnectionPool,\n  CloudConnectionPool\n} = require('./lib/pool');\nconst Helpers = require('./lib/Helpers');\nconst Serializer = require('./lib/Serializer');\nconst errors = require('./lib/errors');\nconst {\n  ConfigurationError\n} = errors;\nconst {\n  prepareHeaders\n} = Connection.internals;\nlet clientVersion = require('./package.json').version;\n/* istanbul ignore next */\nif (clientVersion.includes('-')) {\n  // clean prerelease\n  clientVersion = clientVersion.slice(0, clientVersion.indexOf('-')) + 'p';\n}\nconst kInitialOptions = Symbol('opensearchjs-initial-options');\nconst kChild = Symbol('opensearchjs-child');\nconst kExtensions = Symbol('opensearchjs-extensions');\nconst kEventEmitter = Symbol('opensearchjs-event-emitter');\nconst OpenSearchAPI = require('./api');\nclass Client extends OpenSearchAPI {\n  constructor(opts = {}) {\n    super({\n      ConfigurationError\n    });\n    if (opts.cloud && opts[kChild] === undefined) {\n      const {\n        id,\n        username,\n        password\n      } = opts.cloud;\n      // the cloud id is `cluster-name:base64encodedurl`\n      // the url is a string divided by two '$', the first is the cloud url\n      // the second the opensearch instance, the third the opensearchDashboards instance\n      const cloudUrls = Buffer.from(id.split(':')[1], 'base64').toString().split('$');\n\n      // TODO: remove username and password here in 8\n      if (username && password) {\n        opts.auth = Object.assign({}, opts.auth, {\n          username,\n          password\n        });\n      }\n      opts.node = `https://${cloudUrls[1]}.${cloudUrls[0]}`;\n\n      // Cloud has better performances with compression enabled\n      // see https://github.com/elastic/elasticsearch-py/pull/704.\n      // So unless the user specifies otherwise, we enable compression.\n      if (opts.compression == null) opts.compression = 'gzip';\n      if (opts.suggestCompression == null) opts.suggestCompression = true;\n      if (opts.ssl == null || opts.ssl && opts.ssl.secureProtocol == null) {\n        opts.ssl = opts.ssl || {};\n        opts.ssl.secureProtocol = 'TLSv1_2_method';\n      }\n    }\n    if (!opts.node && !opts.nodes) {\n      throw new ConfigurationError('Missing node(s) option');\n    }\n    if (opts[kChild] === undefined) {\n      const checkAuth = getAuth(opts.node || opts.nodes);\n      if (checkAuth && checkAuth.username && checkAuth.password) {\n        opts.auth = Object.assign({}, opts.auth, {\n          username: checkAuth.username,\n          password: checkAuth.password\n        });\n      }\n    }\n    const options = opts[kChild] !== undefined ? opts[kChild].initialOptions : Object.assign({}, {\n      Connection,\n      Transport,\n      Serializer,\n      ConnectionPool: opts.cloud ? CloudConnectionPool : ConnectionPool,\n      maxRetries: 3,\n      requestTimeout: 30000,\n      pingTimeout: 3000,\n      sniffInterval: false,\n      sniffOnStart: false,\n      sniffEndpoint: '_nodes/_all/http',\n      sniffOnConnectionFault: false,\n      resurrectStrategy: 'ping',\n      suggestCompression: false,\n      compression: false,\n      ssl: null,\n      agent: null,\n      headers: {},\n      nodeFilter: null,\n      nodeSelector: 'round-robin',\n      generateRequestId: null,\n      name: 'opensearch-js',\n      auth: null,\n      opaqueIdPrefix: null,\n      context: null,\n      proxy: null,\n      enableMetaHeader: true,\n      disablePrototypePoisoningProtection: false,\n      enableLongNumeralSupport: false\n    }, opts);\n    if (process.env.OPENSEARCH_CLIENT_APIVERSIONING === 'true') {\n      options.headers = Object.assign({\n        accept: 'application/vnd.opensearch+json; compatible-with=7'\n      }, options.headers);\n    }\n    this[kInitialOptions] = options;\n    this[kExtensions] = [];\n    this.name = options.name;\n    if (opts[kChild] !== undefined) {\n      this.serializer = options[kChild].serializer;\n      this.connectionPool = options[kChild].connectionPool;\n      this[kEventEmitter] = options[kChild].eventEmitter;\n    } else {\n      this[kEventEmitter] = new EventEmitter();\n      this.serializer = new options.Serializer({\n        disablePrototypePoisoningProtection: options.disablePrototypePoisoningProtection,\n        enableLongNumeralSupport: options.enableLongNumeralSupport\n      });\n      this.connectionPool = new options.ConnectionPool({\n        pingTimeout: options.pingTimeout,\n        resurrectStrategy: options.resurrectStrategy,\n        ssl: options.ssl,\n        agent: options.agent,\n        proxy: options.proxy,\n        Connection: options.Connection,\n        auth: options.auth,\n        emit: this[kEventEmitter].emit.bind(this[kEventEmitter]),\n        sniffEnabled: options.sniffInterval !== false || options.sniffOnStart !== false || options.sniffOnConnectionFault !== false\n      });\n      // Add the connections before initialize the Transport\n      this.connectionPool.addConnection(options.node || options.nodes);\n    }\n    this.transport = new options.Transport({\n      emit: this[kEventEmitter].emit.bind(this[kEventEmitter]),\n      connectionPool: this.connectionPool,\n      serializer: this.serializer,\n      maxRetries: options.maxRetries,\n      requestTimeout: options.requestTimeout,\n      sniffInterval: options.sniffInterval,\n      sniffOnStart: options.sniffOnStart,\n      sniffOnConnectionFault: options.sniffOnConnectionFault,\n      sniffEndpoint: options.sniffEndpoint,\n      suggestCompression: options.suggestCompression,\n      compression: options.compression,\n      headers: options.headers,\n      nodeFilter: options.nodeFilter,\n      nodeSelector: options.nodeSelector,\n      generateRequestId: options.generateRequestId,\n      name: options.name,\n      opaqueIdPrefix: options.opaqueIdPrefix,\n      context: options.context,\n      memoryCircuitBreaker: options.memoryCircuitBreaker,\n      auth: options.auth\n    });\n    this.helpers = new Helpers({\n      client: this,\n      maxRetries: options.maxRetries\n    });\n  }\n  get emit() {\n    return this[kEventEmitter].emit.bind(this[kEventEmitter]);\n  }\n  get on() {\n    return this[kEventEmitter].on.bind(this[kEventEmitter]);\n  }\n  get once() {\n    return this[kEventEmitter].once.bind(this[kEventEmitter]);\n  }\n  get off() {\n    return this[kEventEmitter].off.bind(this[kEventEmitter]);\n  }\n  extend(name, opts, fn) {\n    if (typeof opts === 'function') {\n      fn = opts;\n      opts = {};\n    }\n    let [namespace, method] = name.split('.');\n    if (method == null) {\n      method = namespace;\n      namespace = null;\n    }\n    if (namespace != null) {\n      if (this[namespace] != null && this[namespace][method] != null && opts.force !== true) {\n        throw new Error(`The method \"${method}\" already exists on namespace \"${namespace}\"`);\n      }\n      if (this[namespace] == null) this[namespace] = {};\n      this[namespace][method] = fn({\n        makeRequest: this.transport.request.bind(this.transport),\n        result: {\n          body: null,\n          statusCode: null,\n          headers: null,\n          warnings: null\n        },\n        ConfigurationError\n      });\n    } else {\n      if (this[method] != null && opts.force !== true) {\n        throw new Error(`The method \"${method}\" already exists`);\n      }\n      this[method] = fn({\n        makeRequest: this.transport.request.bind(this.transport),\n        result: {\n          body: null,\n          statusCode: null,\n          headers: null,\n          warnings: null\n        },\n        ConfigurationError\n      });\n    }\n    this[kExtensions].push({\n      name,\n      opts,\n      fn\n    });\n  }\n  child(opts) {\n    // Merge the new options with the initial ones\n    const options = Object.assign({}, this[kInitialOptions], opts);\n    // Pass to the child client the parent instances that cannot be overriden\n    options[kChild] = {\n      connectionPool: this.connectionPool,\n      serializer: this.serializer,\n      eventEmitter: this[kEventEmitter],\n      initialOptions: options\n    };\n\n    /* istanbul ignore else */\n    if (options.auth !== undefined) {\n      options.headers = prepareHeaders(options.headers, options.auth);\n    }\n    const client = new Client(options);\n    // sync compatible check\n    const tSymbol = Object.getOwnPropertySymbols(this.transport).filter(symbol => symbol.description === 'compatible check')[0];\n    client.transport[tSymbol] = this.transport[tSymbol];\n    // Add parent extensions\n    if (this[kExtensions].length > 0) {\n      this[kExtensions].forEach(({\n        name,\n        opts,\n        fn\n      }) => {\n        client.extend(name, opts, fn);\n      });\n    }\n    return client;\n  }\n  close(callback) {\n    if (callback == null) {\n      return new Promise(resolve => {\n        this.close(resolve);\n      });\n    }\n    debug('Closing the client');\n    this.connectionPool.empty(callback);\n  }\n}\nfunction getAuth(node) {\n  if (Array.isArray(node)) {\n    for (const url of node) {\n      const auth = getUsernameAndPassword(url);\n      if (auth.username !== '' && auth.password !== '') {\n        return auth;\n      }\n    }\n    return null;\n  }\n  const auth = getUsernameAndPassword(node);\n  if (auth.username !== '' && auth.password !== '') {\n    return auth;\n  }\n  return null;\n  function getUsernameAndPassword(node) {\n    /* istanbul ignore else */\n    if (typeof node === 'string') {\n      const {\n        username,\n        password\n      } = new URL(node);\n      return {\n        username: decodeURIComponent(username),\n        password: decodeURIComponent(password)\n      };\n    } else if (node.url instanceof URL) {\n      return {\n        username: decodeURIComponent(node.url.username),\n        password: decodeURIComponent(node.url.password)\n      };\n    }\n  }\n}\nconst events = {\n  RESPONSE: 'response',\n  REQUEST: 'request',\n  SNIFF: 'sniff',\n  RESURRECT: 'resurrect',\n  SERIALIZATION: 'serialization',\n  DESERIALIZATION: 'deserialization'\n};\nmodule.exports = {\n  Client,\n  Transport,\n  ConnectionPool,\n  Connection,\n  Serializer,\n  events,\n  errors\n};","map":{"version":3,"names":["require","EventEmitter","URL","debug","Transport","Connection","ConnectionPool","CloudConnectionPool","Helpers","Serializer","errors","ConfigurationError","prepareHeaders","internals","clientVersion","version","includes","slice","indexOf","kInitialOptions","Symbol","kChild","kExtensions","kEventEmitter","OpenSearchAPI","Client","constructor","opts","cloud","undefined","id","username","password","cloudUrls","Buffer","from","split","toString","auth","Object","assign","node","compression","suggestCompression","ssl","secureProtocol","nodes","checkAuth","getAuth","options","initialOptions","maxRetries","requestTimeout","pingTimeout","sniffInterval","sniffOnStart","sniffEndpoint","sniffOnConnectionFault","resurrectStrategy","agent","headers","nodeFilter","nodeSelector","generateRequestId","name","opaqueIdPrefix","context","proxy","enableMetaHeader","disablePrototypePoisoningProtection","enableLongNumeralSupport","process","env","OPENSEARCH_CLIENT_APIVERSIONING","accept","serializer","connectionPool","eventEmitter","emit","bind","sniffEnabled","addConnection","transport","memoryCircuitBreaker","helpers","client","on","once","off","extend","fn","namespace","method","force","Error","makeRequest","request","result","body","statusCode","warnings","push","child","tSymbol","getOwnPropertySymbols","filter","symbol","description","length","forEach","close","callback","Promise","resolve","empty","Array","isArray","url","getUsernameAndPassword","decodeURIComponent","events","RESPONSE","REQUEST","SNIFF","RESURRECT","SERIALIZATION","DESERIALIZATION","module","exports"],"sources":["C:/search/vue-search/node_modules/@opensearch-project/opensearch/index.js"],"sourcesContent":["/*\n * Copyright OpenSearch Contributors\n * SPDX-License-Identifier: Apache-2.0\n *\n * The OpenSearch Contributors require contributions made to\n * this file be licensed under the Apache-2.0 license or a\n * compatible open source license.\n *\n */\n\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n'use strict';\n\nconst { EventEmitter } = require('events');\nconst { URL } = require('url');\nconst debug = require('debug')('opensearch');\nconst Transport = require('./lib/Transport');\nconst Connection = require('./lib/Connection');\nconst { ConnectionPool, CloudConnectionPool } = require('./lib/pool');\nconst Helpers = require('./lib/Helpers');\nconst Serializer = require('./lib/Serializer');\nconst errors = require('./lib/errors');\nconst { ConfigurationError } = errors;\nconst { prepareHeaders } = Connection.internals;\nlet clientVersion = require('./package.json').version;\n/* istanbul ignore next */\nif (clientVersion.includes('-')) {\n  // clean prerelease\n  clientVersion = clientVersion.slice(0, clientVersion.indexOf('-')) + 'p';\n}\n\nconst kInitialOptions = Symbol('opensearchjs-initial-options');\nconst kChild = Symbol('opensearchjs-child');\nconst kExtensions = Symbol('opensearchjs-extensions');\nconst kEventEmitter = Symbol('opensearchjs-event-emitter');\n\nconst OpenSearchAPI = require('./api');\n\nclass Client extends OpenSearchAPI {\n  constructor(opts = {}) {\n    super({ ConfigurationError });\n    if (opts.cloud && opts[kChild] === undefined) {\n      const { id, username, password } = opts.cloud;\n      // the cloud id is `cluster-name:base64encodedurl`\n      // the url is a string divided by two '$', the first is the cloud url\n      // the second the opensearch instance, the third the opensearchDashboards instance\n      const cloudUrls = Buffer.from(id.split(':')[1], 'base64').toString().split('$');\n\n      // TODO: remove username and password here in 8\n      if (username && password) {\n        opts.auth = Object.assign({}, opts.auth, { username, password });\n      }\n      opts.node = `https://${cloudUrls[1]}.${cloudUrls[0]}`;\n\n      // Cloud has better performances with compression enabled\n      // see https://github.com/elastic/elasticsearch-py/pull/704.\n      // So unless the user specifies otherwise, we enable compression.\n      if (opts.compression == null) opts.compression = 'gzip';\n      if (opts.suggestCompression == null) opts.suggestCompression = true;\n      if (opts.ssl == null || (opts.ssl && opts.ssl.secureProtocol == null)) {\n        opts.ssl = opts.ssl || {};\n        opts.ssl.secureProtocol = 'TLSv1_2_method';\n      }\n    }\n\n    if (!opts.node && !opts.nodes) {\n      throw new ConfigurationError('Missing node(s) option');\n    }\n\n    if (opts[kChild] === undefined) {\n      const checkAuth = getAuth(opts.node || opts.nodes);\n      if (checkAuth && checkAuth.username && checkAuth.password) {\n        opts.auth = Object.assign({}, opts.auth, {\n          username: checkAuth.username,\n          password: checkAuth.password,\n        });\n      }\n    }\n\n    const options =\n      opts[kChild] !== undefined\n        ? opts[kChild].initialOptions\n        : Object.assign(\n            {},\n            {\n              Connection,\n              Transport,\n              Serializer,\n              ConnectionPool: opts.cloud ? CloudConnectionPool : ConnectionPool,\n              maxRetries: 3,\n              requestTimeout: 30000,\n              pingTimeout: 3000,\n              sniffInterval: false,\n              sniffOnStart: false,\n              sniffEndpoint: '_nodes/_all/http',\n              sniffOnConnectionFault: false,\n              resurrectStrategy: 'ping',\n              suggestCompression: false,\n              compression: false,\n              ssl: null,\n              agent: null,\n              headers: {},\n              nodeFilter: null,\n              nodeSelector: 'round-robin',\n              generateRequestId: null,\n              name: 'opensearch-js',\n              auth: null,\n              opaqueIdPrefix: null,\n              context: null,\n              proxy: null,\n              enableMetaHeader: true,\n              disablePrototypePoisoningProtection: false,\n              enableLongNumeralSupport: false,\n            },\n            opts\n          );\n\n    if (process.env.OPENSEARCH_CLIENT_APIVERSIONING === 'true') {\n      options.headers = Object.assign(\n        { accept: 'application/vnd.opensearch+json; compatible-with=7' },\n        options.headers\n      );\n    }\n\n    this[kInitialOptions] = options;\n    this[kExtensions] = [];\n    this.name = options.name;\n\n    if (opts[kChild] !== undefined) {\n      this.serializer = options[kChild].serializer;\n      this.connectionPool = options[kChild].connectionPool;\n      this[kEventEmitter] = options[kChild].eventEmitter;\n    } else {\n      this[kEventEmitter] = new EventEmitter();\n      this.serializer = new options.Serializer({\n        disablePrototypePoisoningProtection: options.disablePrototypePoisoningProtection,\n        enableLongNumeralSupport: options.enableLongNumeralSupport,\n      });\n      this.connectionPool = new options.ConnectionPool({\n        pingTimeout: options.pingTimeout,\n        resurrectStrategy: options.resurrectStrategy,\n        ssl: options.ssl,\n        agent: options.agent,\n        proxy: options.proxy,\n        Connection: options.Connection,\n        auth: options.auth,\n        emit: this[kEventEmitter].emit.bind(this[kEventEmitter]),\n        sniffEnabled:\n          options.sniffInterval !== false ||\n          options.sniffOnStart !== false ||\n          options.sniffOnConnectionFault !== false,\n      });\n      // Add the connections before initialize the Transport\n      this.connectionPool.addConnection(options.node || options.nodes);\n    }\n\n    this.transport = new options.Transport({\n      emit: this[kEventEmitter].emit.bind(this[kEventEmitter]),\n      connectionPool: this.connectionPool,\n      serializer: this.serializer,\n      maxRetries: options.maxRetries,\n      requestTimeout: options.requestTimeout,\n      sniffInterval: options.sniffInterval,\n      sniffOnStart: options.sniffOnStart,\n      sniffOnConnectionFault: options.sniffOnConnectionFault,\n      sniffEndpoint: options.sniffEndpoint,\n      suggestCompression: options.suggestCompression,\n      compression: options.compression,\n      headers: options.headers,\n      nodeFilter: options.nodeFilter,\n      nodeSelector: options.nodeSelector,\n      generateRequestId: options.generateRequestId,\n      name: options.name,\n      opaqueIdPrefix: options.opaqueIdPrefix,\n      context: options.context,\n      memoryCircuitBreaker: options.memoryCircuitBreaker,\n      auth: options.auth,\n    });\n\n    this.helpers = new Helpers({\n      client: this,\n      maxRetries: options.maxRetries,\n    });\n  }\n\n  get emit() {\n    return this[kEventEmitter].emit.bind(this[kEventEmitter]);\n  }\n\n  get on() {\n    return this[kEventEmitter].on.bind(this[kEventEmitter]);\n  }\n\n  get once() {\n    return this[kEventEmitter].once.bind(this[kEventEmitter]);\n  }\n\n  get off() {\n    return this[kEventEmitter].off.bind(this[kEventEmitter]);\n  }\n\n  extend(name, opts, fn) {\n    if (typeof opts === 'function') {\n      fn = opts;\n      opts = {};\n    }\n\n    let [namespace, method] = name.split('.');\n    if (method == null) {\n      method = namespace;\n      namespace = null;\n    }\n\n    if (namespace != null) {\n      if (this[namespace] != null && this[namespace][method] != null && opts.force !== true) {\n        throw new Error(`The method \"${method}\" already exists on namespace \"${namespace}\"`);\n      }\n\n      if (this[namespace] == null) this[namespace] = {};\n      this[namespace][method] = fn({\n        makeRequest: this.transport.request.bind(this.transport),\n        result: { body: null, statusCode: null, headers: null, warnings: null },\n        ConfigurationError,\n      });\n    } else {\n      if (this[method] != null && opts.force !== true) {\n        throw new Error(`The method \"${method}\" already exists`);\n      }\n\n      this[method] = fn({\n        makeRequest: this.transport.request.bind(this.transport),\n        result: { body: null, statusCode: null, headers: null, warnings: null },\n        ConfigurationError,\n      });\n    }\n\n    this[kExtensions].push({ name, opts, fn });\n  }\n\n  child(opts) {\n    // Merge the new options with the initial ones\n    const options = Object.assign({}, this[kInitialOptions], opts);\n    // Pass to the child client the parent instances that cannot be overriden\n    options[kChild] = {\n      connectionPool: this.connectionPool,\n      serializer: this.serializer,\n      eventEmitter: this[kEventEmitter],\n      initialOptions: options,\n    };\n\n    /* istanbul ignore else */\n    if (options.auth !== undefined) {\n      options.headers = prepareHeaders(options.headers, options.auth);\n    }\n\n    const client = new Client(options);\n    // sync compatible check\n    const tSymbol = Object.getOwnPropertySymbols(this.transport).filter(\n      (symbol) => symbol.description === 'compatible check'\n    )[0];\n    client.transport[tSymbol] = this.transport[tSymbol];\n    // Add parent extensions\n    if (this[kExtensions].length > 0) {\n      this[kExtensions].forEach(({ name, opts, fn }) => {\n        client.extend(name, opts, fn);\n      });\n    }\n    return client;\n  }\n\n  close(callback) {\n    if (callback == null) {\n      return new Promise((resolve) => {\n        this.close(resolve);\n      });\n    }\n    debug('Closing the client');\n    this.connectionPool.empty(callback);\n  }\n}\n\nfunction getAuth(node) {\n  if (Array.isArray(node)) {\n    for (const url of node) {\n      const auth = getUsernameAndPassword(url);\n      if (auth.username !== '' && auth.password !== '') {\n        return auth;\n      }\n    }\n\n    return null;\n  }\n\n  const auth = getUsernameAndPassword(node);\n  if (auth.username !== '' && auth.password !== '') {\n    return auth;\n  }\n\n  return null;\n\n  function getUsernameAndPassword(node) {\n    /* istanbul ignore else */\n    if (typeof node === 'string') {\n      const { username, password } = new URL(node);\n      return {\n        username: decodeURIComponent(username),\n        password: decodeURIComponent(password),\n      };\n    } else if (node.url instanceof URL) {\n      return {\n        username: decodeURIComponent(node.url.username),\n        password: decodeURIComponent(node.url.password),\n      };\n    }\n  }\n}\n\nconst events = {\n  RESPONSE: 'response',\n  REQUEST: 'request',\n  SNIFF: 'sniff',\n  RESURRECT: 'resurrect',\n  SERIALIZATION: 'serialization',\n  DESERIALIZATION: 'deserialization',\n};\n\nmodule.exports = {\n  Client,\n  Transport,\n  ConnectionPool,\n  Connection,\n  Serializer,\n  events,\n  errors,\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}